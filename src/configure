#! /bin/bash

#
# This file is *NOT* generated by GNU Autoconf, but written by NIIBE Yutaka
#
# Copyright (C) 2010, 2011 Free Software Initiative of Japan
#
# This file is a part of Gnuk, a GnuPG USB Token implementation.
# Gnuk is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Gnuk is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Default settings
help=no
target=OLIMEX_STM32_H103
verbose=no
with_dfu=default
debug=no
pinpad=no

# check /dev/random
if test ! -e /dev/random; then
  echo "/dev/random is required." >&2
  exit 1
fi

# Process each option
for option; do
  case $option in
  *=*)	optarg=`expr "X$option" : '[^=]*=\(.*\)'` ;;
  *)	optarg=yes ;;
  esac

  case $option in
  -h | --help)
    help=yes ;;
  --target=*)
    target=$optarg ;;
  -v | --verbose)
    verbose=yes ;;
  --enable-debug)
    debug=yes ;;
  --disable-debug)
    debug=no ;;
  --enable-pinpad)
    pinpad=yes ;;
  --enable-pinpad=*)
    pinpad=$optarg ;;
  --disable-pinpad)
    pinpad=no ;;
  --with-dfu)
    with_dfu=yes ;;
  --without-dfu)
    with_dfu=no ;;
  *)
    echo "Unrecognized option \`$option'" >&2
    echo "Try \`$0 --help' for more information." >&2
    exit 1
    ;;
  esac
done

if test "$help" = "yes"; then
  cat <<EOF
Usage: $0 [OPTION]...

Defaults for the options are specified in brackets.

Configuration:
  -h, --help		display this help and exit	[no]
  --target=TARGET	specify target			[OLIMEX_STM32_H103]
			supported targes are:
			   OLIMEX_STM32_H103
			   STM32_PRIMER2
			   CQ_STARM
			   STBEE_MINI
			   STM8S_DISCOVERY
			   STBEE
  --enable-debug	debug with virtual COM port	[no]
  --enable-pinpad={dnd,cir,dial}
			PIN entry support		[no]
  --with-dfu		build image for DFU 		[<target specific>]
EOF
  exit 0
fi

BOARD_DIR=../boards/$target
if test -d $BOARD_DIR; then
  echo "Configured for target: $target"
else
  echo "Unsupported target \`$target'" >&2
  exit 1
fi

# Flash page size in byte
FLASH_PAGE_SIZE=1024
# Flash memory size in KB
FLASH_SIZE=128

# Settings for TARGET
case $target in
CQ_STARM|STBEE_MINI)
  if test "$with_dfu" = "default"; then
    with_dfu=yes;
  fi  ;;
STM32_PRIMER2)
  FLASH_PAGE_SIZE=2048
  FLASH_SIZE=512
  ;;
STBEE)
  FLASH_PAGE_SIZE=2048
  FLASH_SIZE=512
  if test "$with_dfu" = "default"; then
    with_dfu=yes;
  fi  ;;
STM8S_DISCOVERY)
  FLASH_SIZE=64
  ;;
*)
  ;;
esac

# --enable-debug option
if test "$debug" = "yes"; then
  DEBUG_MAKE_OPTION="ENABLE_DEBUG=1"
  DEBUG_DEFINE="#define DEBUG 1"
  echo "Debug option enabled"
else
  DEBUG_MAKE_OPTION="# ENABLE_DEBUG=1"
  DEBUG_DEFINE="#undef DEBUG"
  echo "Debug option disabled"
fi

# --with-dfu option
if test "$with_dfu" = "yes"; then
  echo "Configured for DFU"
  ORIGIN=0x08003000
  FLASH_SIZE=`expr $FLASH_SIZE - 12`
  DFU_DEFINE="#define DFU_SUPPORT 1"
else
  echo "Configured for bare system (no-DFU)"
  ORIGIN=0x08000000
  DFU_DEFINE="#undef DFU_SUPPORT"
fi

# --enable-pinpad option
if test "$pinpad" = "no"; then
  PINPAD_MAKE_OPTION="# ENABLE_PINPAD="
  PINPAD_DEFINE="#undef PINPAD_SUPPORT"
  PINPAD_MORE_DEFINE=""
  echo "PIN pad option disabled"
elif test "$pinpad" = "yes"; then
  PINPAD_MAKE_OPTION="ENABLE_PINPAD=dnd"
  PINPAD_DEFINE="#define PINPAD_SUPPORT 1"
  PINPAD_MORE_DEFINE="#define PINPAD_DND_SUPPORT 1"
  echo "PIN pad option enabled (dnd)"
else
  PINPAD_MAKE_OPTION="ENABLE_PINPAD=$pinpad"
  PINPAD_DEFINE="#define PINPAD_SUPPORT 1"
  PINPAD_MORE_DEFINE="#define PINPAD_${pinpad^^[a-z]}_SUPPORT 1"
  echo "PIN pad option enabled ($pinpad)"
fi

sed -e "s%@BOARD_DIR@%$BOARD_DIR%" \
    -e "s%@DEBUG_MAKE_OPTION@%$DEBUG_MAKE_OPTION%" \
    -e "s%@PINPAD_MAKE_OPTION@%$PINPAD_MAKE_OPTION%" \
	< Makefile.in > Makefile
sed -e "s/@ORIGIN@/$ORIGIN/" -e "s/@FLASH_SIZE@/$FLASH_SIZE/" \
    -e "s/@FLASH_PAGE_SIZE@/$FLASH_PAGE_SIZE/" \
	< gnuk.ld.in > gnuk.ld
sed -e "s/@DEBUG_DEFINE@/$DEBUG_DEFINE/" \
    -e "s/@PINPAD_DEFINE@/$PINPAD_DEFINE/" \
    -e "s/@PINPAD_MORE_DEFINE@/$PINPAD_MORE_DEFINE/" \
    -e "s/@DFU_DEFINE@/$DFU_DEFINE/" \
	< config.h.in > config.h
exit 0
